---
import "@/styles/global.css";
import { Header } from "./header";
import { Footer } from "./footer";

interface Props {
  title?: string;
  description?: string;
}

const {
  title = "PGAi Projects",
  description = "Student projects from the Practical Generative AI course at Johns Hopkins University.",
} = Astro.props;
---

<html lang="en" class="h-full scroll-smooth antialiased">
  <head>
    <script is:inline>
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <slot name="head" />
    <!--  children with the `slot="head"` attribute will go here -->
  </head>
  <body class="flex flex-col min-h-screen">
    <Header client:only="react" />
    <main class="flex-grow">
      <slot />
    </main>
    <Footer client:only="react" />
  </body>
</html>
